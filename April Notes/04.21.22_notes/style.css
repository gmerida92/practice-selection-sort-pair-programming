.container{
  background-color: #2b2d2f;
  /*? Setting position as relative */
  /* - Browser calculate position of any absolutely positioned children */
  /*    from its top-left corner */
  /* position: relative; */
}

.element{
  box-sizing: border-box;
  display: inline-block;
  width: 100px;
  height: 280px;
  font-size: 36px;
}

#yellow-box{
  background-color: #ffff00;
  color: #000000
}

#pink-box{
  background-color: #ff69b4;
  /*? setting element to be static */
  /* position: static; */
  
  /*? Relative positioning: */
  /* Creates a stacking context -- overlapping elements whose order can be set */
  /*  by the z-index property (z-index specifies the stacking order) */
  bottom: 60px;
  /* left: 0; */
  /* position: absolute; */
  /* position: fixed; */
  /* right: 0; */
  /* top: 60px; */
  /*? Absolute Positioning */
  /* Creates a stacking context -- overlapping elements whose order can be set by the z-index property */
  /* Absolute = remove from flow of the document (not in layout of the content anymore) */
  /* When parent is set to relative, the absolute child element will be positioned relative to its parent */
  /* --> meaning if we want absolute positioning of the element to be calculated from the top-left corner */
  /* ... of the closest positioned ancestor element, the container element */
  /*? Fixed positioning */
  /* A fixed element, similarly to absolute, is removed from the page flow */
  /* However, unlike absolute, a fixed element position is relative the html document itself  */
  /*   and not to an ancestor element and are ordered by z-index property */
  /* --> It will remain in the same spot on the page, regardless of the size of the window or whether 
      a user scrolls */
  /*? Sticky positioning  */
  /* Creates a stacking context -- overlapping elements whose order can bet set by z-index property */
  /* - must set at least one threshold value using either top, right, bottom, or left for it to work  */
  /* -- it will start off relatively postioned until you scroll past its original position */
  /* become fixed until bottom of their parent element pushes them off the screen as the parent... */
  /* ... element scrolls off the screen */
  position: sticky; 
  top: 60px;
}

#blue-box{
  background-color: #00eeee;
  /* Example of two absolutely positioned elements in a relative parent */
  /* position: absolute; */
}
